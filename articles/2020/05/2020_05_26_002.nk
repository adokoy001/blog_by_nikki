==TITLE_START==
Laravelも並行して学習中
==TITLE_END==

==OG_IMAGE 
==OG_LOCALE 

==SUMMARY_START==
Rustの学習をマイペースで進めつつ、Laravelのお勉強も始めた。
==SUMMARY_END==

==TAG_START==
PHP Laravel プログラミング フレームワーク
==TAG_END==

==HEAD_START==
==HEAD_END==

==BODY_BELOW==

==h1 Laravelも並行して学習中

最近Rustの学習をボトムアップ式に進めているが、同時にLaravelにも手を出してみた。

というのも、Rustのパラダイムが私にとっては難しいようで、最終目標のActix-webでウェブアプリを作ったりシステムプログラミングに取り掛かれるようになるまでかなり時間が掛かりそうだと分かったから。

仕事ではFuelPHPをメインに使っているが、メンテナンス頻度と次期バージョンの開発も怪しい感じで将来性に不安がある。

おそらくPHPのフレームワークとしてLaravelは最もメジャーなものかと思われるので、ちょっとしたツールや管理コンソールをコイツでパパッと作れるようにはなっておきたいと思う。

==h2 感想

==a Qiitaにあった良記事 ==href https://qiita.com/sano1202/items/6021856b70e4f8d3dc3d a==で一通りCRUDアプリを写経してみた。
既に慣れ切ったMVCモデルなのでサクサク進む。

標準のORMはEloquentという名前が付いている。メソッド名は短くて明解。

ViewのテンプレートエンジンはBladeとかいうやつ。慣れが必要だと感じた（仕事ではSmarty・・・）

パフォーマンスを考えなければテンプレートエンジンの必要性についてちょっと思うところがあって、「そもそもPHP自体がテンプレートエンジンなのでは？」というお気持ちがある。

まあ高速化のためだ。わざわざ新しい記法を覚えてやろうじゃないか。

ControllerとValidationもわかりやすい。特にFuelPHPと比べればかなり簡潔で明解だと感じる。

設定ファイルは.envに書くらしいが、恐らく設定ファイルを自由自在に分割したり、独自の設定値を自由自在に作る方法もあるだろう。知らんけど。

今のところいい感じです。
