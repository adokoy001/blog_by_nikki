==TITLE_START==
プロフィール
==TITLE_END==

==OG_IMAGE 
==OG_LOCALE 

==SUMMARY_START==
私の職務経歴とスキルマップについて（プロフィール）
==SUMMARY_END==

==TAG_START==
プロフィール 職務経歴 スキルマップ resume
==TAG_END==

==HEAD_START==
==HEAD_END==

==BODY_BELOW==

==h1 横田 敏明 (Toshiaki Yokoda) プロフィール

横田 敏明 (Toshiaki Yokoda)のプロフィールです。

==h2 経歴

==oln
==li 2000/03/31 公立中学卒業
==li 2000/04/01 公立高校入学
==li 2003/03/31 公立高校卒業
==li 2003/04/01 地元の国立大学入学（情報系）
==li 2007/03/31 地元の国立大学卒業
==li 2007/04/01 同国立大学大学院入学（情報系：博士前期課程）
==li 2009/03/31 同国立大学大学院卒業（情報系：博士前期課程）
==li 2009/04/01 同国立大学大学院入学（情報系：博士後期課程）
==li 2010/04/01 ホテル向けシステムベンダー入社（研究開発系）
==li 2017/03/31 博士後期課程退学
==li 2017/11/05～ 病気により休職
==li 2018/05/05 ホテル向けシステムベンダー退職（病気により）
==li 2019/07/08～ IT零細企業に入社（自動車業界関連）
oln==

修士課程卒業まではストレート、その後はちょっと色々ありました。

学生時代は塾と家庭教師のバイトをしていました。

社会人になってからはIT以外の仕事をしたことがありません。

簡単なwebベースのシステムを作ることが多かったと思います。規模感としてはDBのテーブル数が多くても50～60程度、1テーブルあたりのカラムは15～30程度のものばかりでした。

設計から実装、運用までを一通りこなした経験はあります。分析系アプリの集計SQLのレスポンスを上げるためのチューニング等も一通りやったことがあります（PostgreSQLで）。


==h2 スキル

==h3 プログラミング

主にPerl,PHP,JavaScriptを書いています。

==dl
==dt Perl
==dd そこそこ流暢に扱えていると思います。WAFとしてはMojoliciousが好きです。ORMはDBIx::Classを使っています。WAF無しのCGIの時代からPerlを触っていたりします。
==dt PHP
==dd 文法がPerlと似ているのもあって、カタコトではありますが、それなりに使えていると思います。業務で触ったWAFはFuelPHPしかありません。
==dt JavaScript（ECMA?）
==dd 言語仕様どころか正式な名前すら分かっておらず、コピペ改変ばかりの日々です。が、なんとかなってしまうのが怖いですね。
dl==

コーディング能力については==a 私のGithubアカウント ==href https://github.com/adokoy001 a== を参照してください。

==h3 データベース

RDBMSとしてMySQL, PostgreSQLを業務で使っています（いました）。

常識的なレベルで、インデックスを適切に貼ることぐらいはできます。

遅いSQLを高速化する時には、普段は以下の観点で調査しています。

==ul
==li N+1問題の確認
==li そもそも非効率で無駄なSQLになっていないかを確認
==li カーディナリティの高いフィールドのWhere狙いインデックスを確認
==li Explainの結果を確認
==li 遅い集計アルゴリズムの組み合わせをSQLの組み方で改善できるか検討
==li RDBMSのパラメタチューニング
ul==

DBの運用を専門にしたことはないので、上記程度が現時点での私の限界です。

==dl
==dt MySQL
==dd 1テーブルあたりに利用されるインデックスは1つまで、という仕様ぐらいは把握しています。
==dt PostgreSQL
==dd かなり長い間業務で使っていました。Explainの結果を見て、メモリの許す限りHash Joinアルゴリズムを使うように仕向けたりしていました。
==dt IBM DB2
==dd 業務で仕方なく使っていた程度です。DB2独自の使い方等はほとんどわかりません。
dl==


==h3 その他

自然言語処理のウェブアプリをMojoliciousで作ったことがあり、
MeCab（形態素解析）やCaboCha（係り受け解析）のPerlバインディングを利用していました。
ナイーブベイズを利用した簡単なネガポジ判定アプリ等を作っていました。




